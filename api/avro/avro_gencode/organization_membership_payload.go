// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCES:
 *     organization.avsc
 *     school.avsc
 *     class.avsc
 *     organization_membership.avsc
 *     s3filecreated.avsc
 */
package avro

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type OrganizationMembershipPayload struct {
	Name string `json:"name"`

	Organization_uuid string `json:"organization_uuid"`

	User_uuid string `json:"user_uuid"`

	Organization_role_uuids []string `json:"organization_role_uuids"`
}

const OrganizationMembershipPayloadAvroCRC64Fingerprint = "\vvN\x92\xe1a\xe1\xe0"

func NewOrganizationMembershipPayload() OrganizationMembershipPayload {
	r := OrganizationMembershipPayload{}
	r.Organization_role_uuids = make([]string, 0)

	return r
}

func DeserializeOrganizationMembershipPayload(r io.Reader) (OrganizationMembershipPayload, error) {
	t := NewOrganizationMembershipPayload()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeOrganizationMembershipPayloadFromSchema(r io.Reader, schema string) (OrganizationMembershipPayload, error) {
	t := NewOrganizationMembershipPayload()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeOrganizationMembershipPayload(r OrganizationMembershipPayload, w io.Writer) error {
	var err error
	err = vm.WriteString(r.Name, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.Organization_uuid, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.User_uuid, w)
	if err != nil {
		return err
	}
	err = writeArrayString(r.Organization_role_uuids, w)
	if err != nil {
		return err
	}
	return err
}

func (r OrganizationMembershipPayload) Serialize(w io.Writer) error {
	return writeOrganizationMembershipPayload(r, w)
}

func (r OrganizationMembershipPayload) Schema() string {
	return "{\"fields\":[{\"name\":\"name\",\"type\":\"string\"},{\"logicalType\":\"uuid\",\"name\":\"organization_uuid\",\"type\":\"string\"},{\"logicalType\":\"uuid\",\"name\":\"user_uuid\",\"type\":\"string\"},{\"name\":\"organization_role_uuids\",\"type\":{\"items\":{\"logicalType\":\"uuid\",\"name\":\"OrganizationRoleUuid\",\"type\":\"string\"},\"type\":\"array\"}}],\"name\":\"com.kidsloop.onboarding.OrganizationMembershipPayload\",\"type\":\"record\"}"
}

func (r OrganizationMembershipPayload) SchemaName() string {
	return "com.kidsloop.onboarding.OrganizationMembershipPayload"
}

func (_ OrganizationMembershipPayload) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ OrganizationMembershipPayload) SetInt(v int32)       { panic("Unsupported operation") }
func (_ OrganizationMembershipPayload) SetLong(v int64)      { panic("Unsupported operation") }
func (_ OrganizationMembershipPayload) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ OrganizationMembershipPayload) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ OrganizationMembershipPayload) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ OrganizationMembershipPayload) SetString(v string)   { panic("Unsupported operation") }
func (_ OrganizationMembershipPayload) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *OrganizationMembershipPayload) Get(i int) types.Field {
	switch i {
	case 0:
		w := types.String{Target: &r.Name}

		return w

	case 1:
		w := types.String{Target: &r.Organization_uuid}

		return w

	case 2:
		w := types.String{Target: &r.User_uuid}

		return w

	case 3:
		r.Organization_role_uuids = make([]string, 0)

		w := ArrayStringWrapper{Target: &r.Organization_role_uuids}

		return w

	}
	panic("Unknown field index")
}

func (r *OrganizationMembershipPayload) SetDefault(i int) {
	switch i {
	}
	panic("Unknown field index")
}

func (r *OrganizationMembershipPayload) NullField(i int) {
	switch i {
	}
	panic("Not a nullable field index")
}

func (_ OrganizationMembershipPayload) AppendMap(key string) types.Field {
	panic("Unsupported operation")
}
func (_ OrganizationMembershipPayload) AppendArray() types.Field { panic("Unsupported operation") }
func (_ OrganizationMembershipPayload) HintSize(int)             { panic("Unsupported operation") }
func (_ OrganizationMembershipPayload) Finalize()                {}

func (_ OrganizationMembershipPayload) AvroCRC64Fingerprint() []byte {
	return []byte(OrganizationMembershipPayloadAvroCRC64Fingerprint)
}

func (r OrganizationMembershipPayload) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["name"], err = json.Marshal(r.Name)
	if err != nil {
		return nil, err
	}
	output["organization_uuid"], err = json.Marshal(r.Organization_uuid)
	if err != nil {
		return nil, err
	}
	output["user_uuid"], err = json.Marshal(r.User_uuid)
	if err != nil {
		return nil, err
	}
	output["organization_role_uuids"], err = json.Marshal(r.Organization_role_uuids)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *OrganizationMembershipPayload) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["name"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Name); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for name")
	}
	val = func() json.RawMessage {
		if v, ok := fields["organization_uuid"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Organization_uuid); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for organization_uuid")
	}
	val = func() json.RawMessage {
		if v, ok := fields["user_uuid"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.User_uuid); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for user_uuid")
	}
	val = func() json.RawMessage {
		if v, ok := fields["organization_role_uuids"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Organization_role_uuids); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for organization_role_uuids")
	}
	return nil
}
