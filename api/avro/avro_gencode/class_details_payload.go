// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCES:
 *     organization.avsc
 *     school.avsc
 *     user.avsc
 *     class.avsc
 *     organization_membership.avsc
 *     class_details.avsc
 *     school_membership.avsc
 *     s3filecreated.avsc
 */
package avro

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type ClassDetailsPayload struct {
	Class_uuid string `json:"class_uuid"`

	School_uuid *UnionNullString `json:"school_uuid"`

	Program_uuids *UnionNullArrayString `json:"program_uuids"`

	Subject_uuids *UnionNullArrayString `json:"subject_uuids"`

	Grade_uuids *UnionNullArrayString `json:"grade_uuids"`

	Age_range_uuids *UnionNullArrayString `json:"age_range_uuids"`

	Academic_term_uuid *UnionNullString `json:"academic_term_uuid"`
}

const ClassDetailsPayloadAvroCRC64Fingerprint = "\xe9L\xbb#\x8c\xcb\u07b8"

func NewClassDetailsPayload() ClassDetailsPayload {
	r := ClassDetailsPayload{}
	r.School_uuid = nil
	r.Program_uuids = nil
	r.Subject_uuids = nil
	r.Grade_uuids = nil
	r.Age_range_uuids = nil
	r.Academic_term_uuid = nil
	return r
}

func DeserializeClassDetailsPayload(r io.Reader) (ClassDetailsPayload, error) {
	t := NewClassDetailsPayload()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeClassDetailsPayloadFromSchema(r io.Reader, schema string) (ClassDetailsPayload, error) {
	t := NewClassDetailsPayload()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeClassDetailsPayload(r ClassDetailsPayload, w io.Writer) error {
	var err error
	err = vm.WriteString(r.Class_uuid, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.School_uuid, w)
	if err != nil {
		return err
	}
	err = writeUnionNullArrayString(r.Program_uuids, w)
	if err != nil {
		return err
	}
	err = writeUnionNullArrayString(r.Subject_uuids, w)
	if err != nil {
		return err
	}
	err = writeUnionNullArrayString(r.Grade_uuids, w)
	if err != nil {
		return err
	}
	err = writeUnionNullArrayString(r.Age_range_uuids, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Academic_term_uuid, w)
	if err != nil {
		return err
	}
	return err
}

func (r ClassDetailsPayload) Serialize(w io.Writer) error {
	return writeClassDetailsPayload(r, w)
}

func (r ClassDetailsPayload) Schema() string {
	return "{\"fields\":[{\"logicalType\":\"uuid\",\"name\":\"class_uuid\",\"type\":\"string\"},{\"default\":null,\"logicalType\":\"uuid\",\"name\":\"school_uuid\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"program_uuids\",\"type\":[\"null\",{\"items\":\"string\",\"type\":\"array\"}]},{\"default\":null,\"name\":\"subject_uuids\",\"type\":[\"null\",{\"items\":\"string\",\"type\":\"array\"}]},{\"default\":null,\"name\":\"grade_uuids\",\"type\":[\"null\",{\"items\":\"string\",\"type\":\"array\"}]},{\"default\":null,\"name\":\"age_range_uuids\",\"type\":[\"null\",{\"items\":\"string\",\"type\":\"array\"}]},{\"default\":null,\"logicalType\":\"uuid\",\"name\":\"academic_term_uuid\",\"type\":[\"null\",\"string\"]}],\"name\":\"com.kidsloop.onboarding.ClassDetailsPayload\",\"type\":\"record\"}"
}

func (r ClassDetailsPayload) SchemaName() string {
	return "com.kidsloop.onboarding.ClassDetailsPayload"
}

func (_ ClassDetailsPayload) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ ClassDetailsPayload) SetInt(v int32)       { panic("Unsupported operation") }
func (_ ClassDetailsPayload) SetLong(v int64)      { panic("Unsupported operation") }
func (_ ClassDetailsPayload) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ ClassDetailsPayload) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ ClassDetailsPayload) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ ClassDetailsPayload) SetString(v string)   { panic("Unsupported operation") }
func (_ ClassDetailsPayload) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *ClassDetailsPayload) Get(i int) types.Field {
	switch i {
	case 0:
		w := types.String{Target: &r.Class_uuid}

		return w

	case 1:
		r.School_uuid = NewUnionNullString()

		return r.School_uuid
	case 2:
		r.Program_uuids = NewUnionNullArrayString()

		return r.Program_uuids
	case 3:
		r.Subject_uuids = NewUnionNullArrayString()

		return r.Subject_uuids
	case 4:
		r.Grade_uuids = NewUnionNullArrayString()

		return r.Grade_uuids
	case 5:
		r.Age_range_uuids = NewUnionNullArrayString()

		return r.Age_range_uuids
	case 6:
		r.Academic_term_uuid = NewUnionNullString()

		return r.Academic_term_uuid
	}
	panic("Unknown field index")
}

func (r *ClassDetailsPayload) SetDefault(i int) {
	switch i {
	case 1:
		r.School_uuid = nil
		return
	case 2:
		r.Program_uuids = nil
		return
	case 3:
		r.Subject_uuids = nil
		return
	case 4:
		r.Grade_uuids = nil
		return
	case 5:
		r.Age_range_uuids = nil
		return
	case 6:
		r.Academic_term_uuid = nil
		return
	}
	panic("Unknown field index")
}

func (r *ClassDetailsPayload) NullField(i int) {
	switch i {
	case 1:
		r.School_uuid = nil
		return
	case 2:
		r.Program_uuids = nil
		return
	case 3:
		r.Subject_uuids = nil
		return
	case 4:
		r.Grade_uuids = nil
		return
	case 5:
		r.Age_range_uuids = nil
		return
	case 6:
		r.Academic_term_uuid = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ ClassDetailsPayload) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ ClassDetailsPayload) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ ClassDetailsPayload) HintSize(int)                     { panic("Unsupported operation") }
func (_ ClassDetailsPayload) Finalize()                        {}

func (_ ClassDetailsPayload) AvroCRC64Fingerprint() []byte {
	return []byte(ClassDetailsPayloadAvroCRC64Fingerprint)
}

func (r ClassDetailsPayload) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["class_uuid"], err = json.Marshal(r.Class_uuid)
	if err != nil {
		return nil, err
	}
	output["school_uuid"], err = json.Marshal(r.School_uuid)
	if err != nil {
		return nil, err
	}
	output["program_uuids"], err = json.Marshal(r.Program_uuids)
	if err != nil {
		return nil, err
	}
	output["subject_uuids"], err = json.Marshal(r.Subject_uuids)
	if err != nil {
		return nil, err
	}
	output["grade_uuids"], err = json.Marshal(r.Grade_uuids)
	if err != nil {
		return nil, err
	}
	output["age_range_uuids"], err = json.Marshal(r.Age_range_uuids)
	if err != nil {
		return nil, err
	}
	output["academic_term_uuid"], err = json.Marshal(r.Academic_term_uuid)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *ClassDetailsPayload) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["class_uuid"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Class_uuid); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for class_uuid")
	}
	val = func() json.RawMessage {
		if v, ok := fields["school_uuid"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.School_uuid); err != nil {
			return err
		}
	} else {
		r.School_uuid = NewUnionNullString()

		r.School_uuid = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["program_uuids"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Program_uuids); err != nil {
			return err
		}
	} else {
		r.Program_uuids = NewUnionNullArrayString()

		r.Program_uuids = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["subject_uuids"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Subject_uuids); err != nil {
			return err
		}
	} else {
		r.Subject_uuids = NewUnionNullArrayString()

		r.Subject_uuids = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["grade_uuids"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Grade_uuids); err != nil {
			return err
		}
	} else {
		r.Grade_uuids = NewUnionNullArrayString()

		r.Grade_uuids = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["age_range_uuids"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Age_range_uuids); err != nil {
			return err
		}
	} else {
		r.Age_range_uuids = NewUnionNullArrayString()

		r.Age_range_uuids = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["academic_term_uuid"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Academic_term_uuid); err != nil {
			return err
		}
	} else {
		r.Academic_term_uuid = NewUnionNullString()

		r.Academic_term_uuid = nil
	}
	return nil
}
